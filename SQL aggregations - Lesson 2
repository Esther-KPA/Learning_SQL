.sql

### GROUP BY

Example 01;

SELECT account_id,
       SUM(standard_qty) AS standard,
       SUM(gloss_qty) AS gloss,
       SUM(poster_qty) AS poster
FROM orders
GROUP BY account_id
ORDER BY account_id

EXERCISE :

01;;
Which account (by name) placed the earliest order? Your solution should have the account name and the date of the order.

Solution:
SELECT MIN(occurred_at)
FROM orders;

Correct Solution:
SELECT a.name, o.occurred_at
FROM accounts a
JOIN orders o
ON a.id = o.account_id
ORDER BY occurred_at
LIMIT 1;

02;;
Find the total sales in usd for each account. You should include two columns - the total sales for each company's orders in usd and 
the company name.

Solution:
SELECT SUM(total_amt_usd) AS total_sales, SUM(account_id)
FROM orders
GROUP BY

Corrected solution:
SELECT a.name, SUM(total_amt_usd) total_sales
FROM orders o
JOIN accounts a
ON a.id = o.account_id
GROUP BY a.name;

03;;
Via what channel did the most recent (latest) web_event occur, which account was associated with this web_event? Your query should 
return only three values - the date, channel, and account name.

Solution:
SELECT occurred_at, account_id
FROM web_events
WHERE occurred_at DESC

Corrected solution:
SELECT w.occurred_at, w.channel, a.name
FROM web_events w
JOIN accounts a
ON w.account_id = a.id 
ORDER BY w.occurred_at DESC
LIMIT 1;

04;;
Find the total number of times each type of channel from the web_events was used. Your final table should have two columns - the 
channel and the number of times the channel was used.

Solution:
SELECT AVG(channel) AS no_of_times
FROM web_events;

Corrected solution:
SELECT w.channel, COUNT(*)
FROM web_events w
GROUP BY w.channel


05;;
Who was the primary contact associated with the earliest web_event? 

Solution:
SELECT occurred_at, SUM(account_id)
FROM web_events
GROUP BY occurred_at

Corrected solution:
SELECT a.primary_poc
FROM web_events w
JOIN accounts a
ON a.id = w.account_id
ORDER BY w.occurred_at
LIMIT 1;

06;;
What was the smallest order placed by each account in terms of total usd. Provide only two columns - the account name and the total usd. 
Order from smallest dollar amounts to largest.

Solution:
SELECT SUM(total_amt_usd), account_id
FROM orders
GROUP BY account_id
ORDER BY account_id;

Corrected solution:
SELECT a.name, MIN(total_amt_usd) smallest_order
FROM accounts a
JOIN orders o
ON a.id = o.account_id
GROUP BY a.name
ORDER BY smallest_order;

07;;
Find the number of sales reps in each region. Your final table should have two columns - the region and the number of sales_reps. 
Order from the fewest reps to most reps.

Solution:
SELECT SUM(region_id) AS no_sales_reps, name
FROM sales_reps
GROUP BY name
ORDER BY name









