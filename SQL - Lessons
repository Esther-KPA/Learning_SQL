Lesson 1:

.sql

### lIMITS

/*  
    Try using LIMIT yourself below by writing a query that displays all the data in the occurred_at, account_id, and channel columns 
    of the web_events table, and limits the output to only the first 15 rows. */
    
    Solution:
    
    SELECT occurred_at, account_id, channel
    FROM web_events
    LIMIT 15;


### ORDER BY

/* 
  Write a query to return the 10 earliest orders in the orders table. 
  Include the id, occurred_at, and total_amt_usd. */
  
  Solution:
  SELECT id, occurred_at, total_amt_usd
  FROM orders
  ORDER BY occurred_at
  LIMIT 10;

  
/*
  Write a query to return the top 5 orders in terms of the largest total_amt_usd. 
  Include the id, account_id, and total_amt_usd. */
  
  Solution:
  
  SELECT id, account_id, total_amt_usd
  FROM orders
  ORDER BY total_amt_usd DESC 
  LIMIT 5;

/* 
 Write a query to return the lowest 20 orders in terms of the smallest total_amt_usd. 
 Include the id, account_id, and total_amt_usd. */
 
 Solution:
 SELECT id, account_id, total_amt_usd
 FROM orders
 ORDER BY total_amt_usd   (No DESC because we need from smallest. We could have used Ascending but it is the default of ORDER BY)
 LIMIT 20;
 
 /*
  Write a query that displays the order ID, account ID, and total dollar amount for all the orders, 
  sorted first by the account ID (in ascending order), and then by the total dollar amount (in descending order). */
  
  Solution:
  
  SELECT id, account_id, total_amt_usd
  FROM orders
  ORDER BY account_id, total_amt_usd DESC
 
 (numbers of account-id and total_amt_usd start with lowest to highest)
 
 /*
  Now write a query that again displays order ID, account ID, and total dollar amount for each order, 
  but this time sorted first by total dollar amount (in descending order), and then by account ID (in ascending order). */
  
  Solution:
  SELECT id, account_id, total_amt_usd
  FROM orders
  ORDER BY total_amt_usd DESC, account_id;
  
  (numbers of account-id and total_amt_usd start with highest to lowest)
  
  In query #1, all of the orders for each account ID are grouped together, and then within each of those groupings, 
  the orders appear from the greatest order amount to the least. 
  In query #2, since you sorted by the total dollar amount first, the orders appear from greatest to least 
  regardless of which account ID they were from. 
  Then they are sorted by account ID next. (The secondary sorting by account ID is difficult to see here since only if 
  there were two orders with equal total dollar amounts would there need to be any sorting by account ID.) 
