.sql

#### SQL Data cleaning

By definition, data cleaning is the task of cleaning up raw data to make it usable and ready for analysis. Almost always, 
your data will not be ready for you to run an analysis.

### Normailization:

A few normalization techniques are below:

    Adjusting a column that includes multiple currencies to one common currency
    Adjusting the varied distribution of a column value by transforming it into a z-score
    Converting all price into a common metric (e.g., price per ounce)

### Data cleaning strategy:

The key steps to consider when going about your data cleaning task include the following:

    What data do you need?: Review what data you need to run an analysis and solve the problem at hand.
    
    What data do you have?: Take stock of not only the information you have in your dataset today but what data types
    those fields are. Do these align with your data needs?
    
    How will you clean your data?: Build a game plan of how you’ll convert the data you currently have to the data you need. 
    
    What types of actions and data cleaning techniques will you have to apply? Do you have the skills you need to go from the 
    current to future state?
    
    How will you analyze your data?: Now, it’s game time! How do you run an effective analysis? Build an approach for analysis, 
    as well. And visualize your plan to solve the problem. Finally, remember to question “so what?” at the end of your results, 
    which will help drive recommendations for your organization.

### Methods - Data cleaning:

methods cover three types of data cleaning techniques: parsing information, returning where information lives, and changing the data 
type of the information. 

    Left: Extracts a number of characters from a string starting from the left
    Right: Extracts a number of characters from a string starting from the right
    Substr: Extracts a substring from a string (starting at any position)
    Position: Returns the position of the first occurrence of a substring in a string
    Strpos: Returns the position of a substring within a string
    Concat: Adds two or more expressions together
    Cast: Converts a value of any type into a specific, different data type
    Coalesce: Returns the first non-null value in a list
    
### LEFT, RIGHT & SUBTR

Syntax

    Left: Extracts a # of characters from a string starting from the left
    Right: Extracts a # of characters from a string starting from the right

LEFT(student_information, 8) AS student_id
RIGHT(student_information, 6) AS salary

### Bonus concept; When you dont want to use functions

New Concepts covered in Bonus Concepts

    WITH subquery
    ROW_NUMBER()
    OVER/PARTITION BY
    SCALAR subquery
    CROSS APPLY
    STRING_SPLIT
    PIVOT

WITH table AS(
SELECT  student_information,
        value,
        ROW _NUMBER() OVER(PARTITION BY student_information ORDER BY (SELECT NULL)) AS row_number
FROM    student_db
        CROSS APPLY STRING_SPLIT(student_information, ',') AS back_values
)
SELECT  student_information,
        [1] AS STUDENT_ID,
        [2] AS GENDER,
        [3] AS CITY,
        [4] AS GPA,
        [5] AS SALARY
FROM    table
PIVOT(
        MAX(VALUE)
        FOR row_number IN([1],[2],[3],[4],[5])
) AS PVT)
